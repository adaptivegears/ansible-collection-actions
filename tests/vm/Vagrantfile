# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Common provisioning script
  common_provision = <<-SHELL
    # Update system
    apt-get update -qq
    
    # Install Python for Ansible
    apt-get install -y python3 python3-pip
    
    # Create admin user for testing
    if ! id -u admin >/dev/null 2>&1; then
      useradd -m -s /bin/bash admin
      usermod -aG sudo admin
      echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/admin
    fi
  SHELL

  # Control Plane Node (primary testing VM)
  config.vm.define "debian12", primary: true do |debian|
    debian.vm.box = "bento/debian-12"
    debian.vm.hostname = "debian12"
    debian.vm.network "private_network", ip: "192.168.56.10"

    debian.vm.provider "vmware_fusion" do |vmware|
      vmware.memory = 2048
      vmware.cpus = 2
      vmware.gui = false
      vmware.vmx["displayname"] = "Ansible - Debian 12 Control Plane"
    end
    
    debian.vm.provision "shell", inline: common_provision
  end

  # Worker Node (for multi-node cluster testing)
  config.vm.define "debian12-worker", autostart: false do |worker|
    worker.vm.box = "bento/debian-12"
    worker.vm.hostname = "debian12-worker"
    worker.vm.network "private_network", ip: "192.168.56.11"

    worker.vm.provider "vmware_fusion" do |vmware|
      vmware.memory = 2048
      vmware.cpus = 2
      vmware.gui = false
      vmware.vmx["displayname"] = "Ansible - Debian 12 Worker"
    end
    
    worker.vm.provision "shell", inline: common_provision
  end

  # SSH configuration
  config.ssh.insert_key = false
  config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key"]
end
