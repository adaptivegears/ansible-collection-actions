---
- name: Standard SSH
  hosts: localhost
  connection: local
  gather_facts: true
  become: true
  tasks:
    - name: Print Usage
      when: help | default(h) | default(false)
      failed_when: help | default(h) | default(false)
      ansible.builtin.debug:
        msg:
          - "Usage: @adaptivegears/ssh [OPTIONS]"
          - "Options:"
          - "  -h, --help                       Show this help message and exit"
          - "  -i, --install                    Install OpenSSH server (SSH_INSTALL, default: true)"
          - "  -u, --user=andrey:andreygubarev  Add user to SSH authorized keys (SSH_USERS, default: [])"
          - "  -U                               Authorize Github user to login as debian user"
          - "  -g, --group=group1               Add group to SSH authorized groups (SSH_GROUPS, default: [])"
          - "  --enable-hardening               Enable OpenSSH hardening (SSH_HARDENING, default: true)"
          - "  --enable-tcp-forwarding          Enable TCP forwarding (requires --enable-hardening)"
          - "  --enable-root-login              Enable root login (requires --enable-hardening)"
          - "Examples:"
          - "  $ bootstrap -- @adaptivegears/standard-ssh -U andreygubarev"

    - name: Parse Arguments
      ignore_errors: true
      ansible.builtin.set_fact:
        user: "{{ user | default(u) | default(omit, true) }}"
        group: "{{ group | default(g) | default(omit, true) }}"
        user_key: "{{ user_key | default(U) | default(omit, true) }}"

    - name: Prepare Variables
      ignore_errors: true
      ansible.builtin.set_fact:
        # -i or --install
        ssh_openssh: "{{ lookup('env', 'SSH_INSTALL') | default(install, true) | default(i, true) | default(omit, true) }}"

        # --enable-hardening
        ssh_hardening: "{{ lookup('env', 'SSH_HARDENING') | default(enable_hardening, true) | default(omit, true) }}"

        # --enable-tcp-forwarding
        ssh_hardening_allow_tcp_forwarding: "{{ lookup('env', 'SSH_HARDENING_ALLOW_TCP_FORWARDING') | default(enable_tcp_forwarding, true) | default(omit, true) }}"

        # --enable-root-login
        ssh_hardening_allow_root_login: "{{ lookup('env', 'SSH_HARDENING_ALLOW_ROOT_LOGIN') | default(enable_root_login, true) | default(omit, true) }}"

        # -u or --user=andrey:andreygubarev (where andreygubarev is github username)
        # -U or --user-key=andreygubarev (where andreygubarev is github username)
        ssh_users: >-
          {%- if user is string and user | length > 0 -%}
          {{ [dict(["name", "key"] | zip(user | split(':'))) | combine({"state": "allow"})] }}
          {%- elif user_key is string and user_key | length > 0 -%}
          {{ [dict(["name", "key"] | zip(["admin", user_key])) | combine({"state": "allow"})] }}
          {%- else -%}
          {{ lookup('env', 'SSH_USERS', default='[]') | from_json }}
          {%- endif -%}

        # -g or --group=group1
        ssh_groups: >-
          {%- if group is string and group | length > 0 -%}
          {{ [dict(["name"] | zip([group])) | combine({"state": "allow"})] }}
          {%- else -%}
          {{ lookup('env', 'SSH_GROUPS', default='[]') | from_json }}
          {%- endif -%}

    - name: Include Role
      ansible.builtin.include_role:
        name: ssh
