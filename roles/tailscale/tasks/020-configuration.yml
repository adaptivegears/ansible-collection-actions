---
- name: Tailscale > Config | Wait for readiness
  ansible.builtin.wait_for:
    path: "{{ tailscale_socket }}"
    state: present
    timeout: 60

- name: Tailscale > Config | Get status
  ansible.builtin.command: >-
    tailscale
    --socket {{ tailscale_socket }}
    status --json
  register: tailscale_status
  changed_when: false

- name: Tailscale > Config | Login
  when: (tailscale_status.stdout | from_json)['BackendState'] == 'NeedsLogin'
  block:
    - name: Tailscale > Login | Assert auth key
      ansible.builtin.assert:
        that:
          - tailscale_authkey is defined
          - tailscale_authkey != ""
        success_msg: "Tailscale auth key is defined"
        fail_msg: "Tailscale auth key is not defined"

    - name: Tailscale > Metadata | Save Tailscale Auth Key
      ansible.builtin.copy:
        content: "{{ tailscale_authkey }}"
        dest: /var/lib/instance-metadata/secret-tailscale
        mode: '0400'
        owner: root
        group: root

    - name: Tailscale > Login | Login
      ansible.builtin.command: >-
        tailscale
        --socket="{{ tailscale_socket }}"
        up
        --auth-key="{{ tailscale_authkey }}"
        --hostname="{{ tailscale__hostname }}"
        {% if tailscale_login_server %}
        --login-server="{{ tailscale_login_server }}"
        {% endif %}
      changed_when: true

- name: Tailscale > Config | Advertise exit node
  ansible.builtin.command: >-
    tailscale
    --socket {{ tailscale_socket }}
    up
    --hostname {{ tailscale__hostname }}
    --advertise-exit-node={{ tailscale_advertise_exit_node | ternary('true', 'false') }}
  changed_when: true

- name: Tailscale > Metadata | Get IPv4
  ansible.builtin.shell: >
    tailscale
    --socket {{ tailscale_socket }}
    ip -4
  register: tailscale__ipv4

- name: Tailscale > Metadata | Save IPv4 for local traffic
  ansible.builtin.copy:
    content: "{{ tailscale__ipv4 }}"
    dest: /var/lib/instance-metadata/ipv4-private
    mode: '0644'
    owner: root
    group: root
