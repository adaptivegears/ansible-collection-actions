---
# Dependencies

- name: Debian | Gather package dependencies
  ansible.builtin.command: apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances {{ debian_packages | join(' ') }}
  register: debian_packages_dependencies
  changed_when: false

- name: Debian | Get unique dependencies
  ansible.builtin.set_fact:
    debian_packages_dependencies: "{{ debian_packages_dependencies.stdout | split('\n') | reject('match', '^(\\s+|<)') | unique | sort }}"

# Mark manual

- name: Debian | Gather APT packages
  ansible.builtin.package_facts:
    manager: auto

- name: Debian | Gather manually installed packages
  ansible.builtin.shell: apt-mark showmanual
  register: debian_packages_installed
  changed_when: false

- name: Debian | Mark packages as manually installed
  ansible.builtin.shell: |
    {% for package in (debian_packages_dependencies | difference(debian_packages_installed.stdout_lines)) %}
    {% if package in ansible_facts.packages %}
    apt-mark manual "{{ package }}"
    {% endif %}
    {% endfor %}
    :
  changed_when: false

# Autoremove

- name: Debian | Get packages to remove
  ansible.builtin.set_fact:
    debian_packages_remove: "{{ ansible_facts.packages.keys() | list | difference(debian_packages_dependencies) | unique | sort }}"

- name: Debian | Gather installed packages
  ansible.builtin.shell: dpkg --get-selections | grep -w "install" | cut -f1 | sed 's/:amd64$//'
  register: debian_packages_installed
  changed_when: false

- name: Debian | Get packages to autoremove
  ansible.builtin.set_fact:
    debian_packages_remove: "{{ debian_packages_remove | intersect(debian_packages_installed.stdout_lines) }}"

- name: Debian | Display packages to remove
  ansible.builtin.debug:
    var: debian_packages_remove

- name: Debian | Remove packages
  ansible.builtin.apt:
    name: "{{ debian_packages_remove }}"
    state: absent
    autoremove: true
    purge: true
